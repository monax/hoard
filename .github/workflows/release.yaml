name: release
on:
  push:
    tags:
      - 'v*'

jobs:
  go:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: publish
      uses: docker://goreleaser/goreleaser
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        args: release --release-notes "NOTES.md"
      if: success()

  js:
    name: npm
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF:10}
    - name: publish
      env:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: |
        git config --global user.email "${GITHUB_ACTOR}"
        git config --global user.name "${GITHUB_ACTOR}"
        cd hoard-js
        npm install
        npm run build
        npm version $RELEASE_VERSION
        npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
        npm publish --access public .

  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - run: make docker_build
    - name: Publish
      env:
        DOCKER_REPO: "quay.io/monax/hoard"
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      run: |
        export tag=$(git tag --points-at HEAD)
        echo ${DOCKER_PASS} | docker login --username ${DOCKER_USER} quay.io --password-stdin
        docker tag ${DOCKER_REPO}:${tag#v} ${DOCKER_REPO}:latest
        docker push ${DOCKER_REPO}

  charts:
    runs-on: ubuntu-latest
    env:
      CM_USERNAME: ${{ secrets.CM_USERNAME }}
      CM_PASSWORD: ${{ secrets.CM_PASSWORD }}
      CM_URL:  ${{ secrets.CM_URL }}
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --unshallow --prune
      - run: make helm_deps
      - run: make helm_push
