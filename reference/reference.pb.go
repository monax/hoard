// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: reference.proto

package reference

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Ref_RefType int32

const (
	// Default raw reference containing a body chunk
	Ref_BODY Ref_RefType = 0
	// Ref to a header chunk
	Ref_HEADER Ref_RefType = 1
	// A ref to a Plaintext of refs
	Ref_LINK Ref_RefType = 2
)

var Ref_RefType_name = map[int32]string{
	0: "BODY",
	1: "HEADER",
	2: "LINK",
}

var Ref_RefType_value = map[string]int32{
	"BODY":   0,
	"HEADER": 1,
	"LINK":   2,
}

func (x Ref_RefType) String() string {
	return proto.EnumName(Ref_RefType_name, int32(x))
}

func (Ref_RefType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6b165e33ad62994c, []int{0, 0}
}

type Ref struct {
	Address   []byte `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	SecretKey []byte `protobuf:"bytes,2,opt,name=SecretKey,proto3" json:"SecretKey,omitempty"`
	Salt      []byte `protobuf:"bytes,3,opt,name=Salt,proto3" json:"Salt,omitempty"`
	// Version should always have been Type the way it was used (to distinguish a header)
	// unfortunately because version 2 grants rely on JSON serialisation of Ref (for Refs array)
	// We are stuck with this fields while we need to support version 2 grants.
	// Version 3 grants and above use deterministic protobuf serialisation for Refs so have the
	// expected upgrade semantics
	Version int32 `protobuf:"varint,4,opt,name=Version,proto3" json:"Version,omitempty"`
	// Type indicates whether to undergo further decoding
	Type Ref_RefType `protobuf:"varint,5,opt,name=Type,proto3,enum=reference.Ref_RefType" json:"Type,omitempty"`
	// The size in bytes of the plaintext data
	Size_                int64    `protobuf:"varint,6,opt,name=Size,proto3" json:"Size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ref) Reset()         { *m = Ref{} }
func (m *Ref) String() string { return proto.CompactTextString(m) }
func (*Ref) ProtoMessage()    {}
func (*Ref) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b165e33ad62994c, []int{0}
}
func (m *Ref) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ref.Unmarshal(m, b)
}
func (m *Ref) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ref.Marshal(b, m, deterministic)
}
func (m *Ref) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ref.Merge(m, src)
}
func (m *Ref) XXX_Size() int {
	return xxx_messageInfo_Ref.Size(m)
}
func (m *Ref) XXX_DiscardUnknown() {
	xxx_messageInfo_Ref.DiscardUnknown(m)
}

var xxx_messageInfo_Ref proto.InternalMessageInfo

func (m *Ref) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Ref) GetSecretKey() []byte {
	if m != nil {
		return m.SecretKey
	}
	return nil
}

func (m *Ref) GetSalt() []byte {
	if m != nil {
		return m.Salt
	}
	return nil
}

func (m *Ref) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Ref) GetType() Ref_RefType {
	if m != nil {
		return m.Type
	}
	return Ref_BODY
}

func (m *Ref) GetSize_() int64 {
	if m != nil {
		return m.Size_
	}
	return 0
}

// Note the Salt here is different to the salt that may have been used to encrypt
// the data pointed to by the reference.
type RefsWithNonce struct {
	Refs                 []*Ref   `protobuf:"bytes,1,rep,name=Refs,proto3" json:"Refs,omitempty"`
	Nonce                []byte   `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefsWithNonce) Reset()         { *m = RefsWithNonce{} }
func (m *RefsWithNonce) String() string { return proto.CompactTextString(m) }
func (*RefsWithNonce) ProtoMessage()    {}
func (*RefsWithNonce) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b165e33ad62994c, []int{1}
}
func (m *RefsWithNonce) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefsWithNonce.Unmarshal(m, b)
}
func (m *RefsWithNonce) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefsWithNonce.Marshal(b, m, deterministic)
}
func (m *RefsWithNonce) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefsWithNonce.Merge(m, src)
}
func (m *RefsWithNonce) XXX_Size() int {
	return xxx_messageInfo_RefsWithNonce.Size(m)
}
func (m *RefsWithNonce) XXX_DiscardUnknown() {
	xxx_messageInfo_RefsWithNonce.DiscardUnknown(m)
}

var xxx_messageInfo_RefsWithNonce proto.InternalMessageInfo

func (m *RefsWithNonce) GetRefs() []*Ref {
	if m != nil {
		return m.Refs
	}
	return nil
}

func (m *RefsWithNonce) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

type Link struct {
	Header               *Ref     `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	Body                 []*Ref   `protobuf:"bytes,2,rep,name=Body,proto3" json:"Body,omitempty"`
	Trailer              *Ref     `protobuf:"bytes,3,opt,name=Trailer,proto3" json:"Trailer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Link) Reset()         { *m = Link{} }
func (m *Link) String() string { return proto.CompactTextString(m) }
func (*Link) ProtoMessage()    {}
func (*Link) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b165e33ad62994c, []int{2}
}
func (m *Link) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Link.Unmarshal(m, b)
}
func (m *Link) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Link.Marshal(b, m, deterministic)
}
func (m *Link) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Link.Merge(m, src)
}
func (m *Link) XXX_Size() int {
	return xxx_messageInfo_Link.Size(m)
}
func (m *Link) XXX_DiscardUnknown() {
	xxx_messageInfo_Link.DiscardUnknown(m)
}

var xxx_messageInfo_Link proto.InternalMessageInfo

func (m *Link) GetHeader() *Ref {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Link) GetBody() []*Ref {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Link) GetTrailer() *Ref {
	if m != nil {
		return m.Trailer
	}
	return nil
}

func init() {
	proto.RegisterEnum("reference.Ref_RefType", Ref_RefType_name, Ref_RefType_value)
	proto.RegisterType((*Ref)(nil), "reference.Ref")
	proto.RegisterType((*RefsWithNonce)(nil), "reference.RefsWithNonce")
	proto.RegisterType((*Link)(nil), "reference.Link")
}

func init() { proto.RegisterFile("reference.proto", fileDescriptor_6b165e33ad62994c) }

var fileDescriptor_6b165e33ad62994c = []byte{
	// 327 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x4f, 0x4f, 0xf2, 0x40,
	0x10, 0xc6, 0xdf, 0xa5, 0xa5, 0xbc, 0x8c, 0x8a, 0x64, 0x62, 0xcc, 0x1e, 0x3c, 0x34, 0x35, 0x9a,
	0xea, 0x81, 0x26, 0x78, 0xf1, 0x0a, 0x81, 0x04, 0x02, 0xc1, 0x64, 0x21, 0x1a, 0xbd, 0x95, 0x76,
	0x2a, 0x8d, 0xd0, 0x25, 0xdb, 0x6a, 0xc4, 0xf8, 0x39, 0xfd, 0x3c, 0x66, 0x57, 0xfe, 0xc4, 0xe0,
	0xa1, 0xc9, 0xcc, 0xf3, 0x7b, 0x3a, 0xb3, 0xfb, 0x2c, 0x1c, 0x2b, 0x4a, 0x48, 0x51, 0x16, 0x51,
	0x63, 0xa9, 0x64, 0x21, 0xb1, 0xba, 0x15, 0xbc, 0x2f, 0x06, 0x96, 0xa0, 0x04, 0x39, 0x54, 0x5a,
	0x71, 0xac, 0x28, 0xcf, 0x39, 0x73, 0x99, 0x7f, 0x28, 0x36, 0x2d, 0x9e, 0x41, 0x75, 0x4c, 0x91,
	0xa2, 0x62, 0x40, 0x2b, 0x5e, 0x32, 0x6c, 0x27, 0x20, 0x82, 0x3d, 0x0e, 0xe7, 0x05, 0xb7, 0x0c,
	0x30, 0xb5, 0x9e, 0x75, 0x4f, 0x2a, 0x4f, 0x65, 0xc6, 0x6d, 0x97, 0xf9, 0x65, 0xb1, 0x69, 0xf1,
	0x1a, 0xec, 0xc9, 0x6a, 0x49, 0xbc, 0xec, 0x32, 0xbf, 0xd6, 0x3c, 0x6d, 0xec, 0x0e, 0x26, 0x28,
	0xd1, 0x9f, 0xa6, 0xc2, 0x78, 0xcc, 0xe4, 0xf4, 0x83, 0xb8, 0xe3, 0x32, 0xdf, 0x12, 0xa6, 0xf6,
	0xae, 0xa0, 0xb2, 0x36, 0xe1, 0x7f, 0xb0, 0xdb, 0x77, 0x9d, 0xc7, 0xfa, 0x3f, 0x04, 0x70, 0x7a,
	0xdd, 0x56, 0xa7, 0x2b, 0xea, 0x4c, 0xab, 0xc3, 0xfe, 0x68, 0x50, 0x2f, 0x79, 0x7d, 0x38, 0x12,
	0x94, 0xe4, 0x0f, 0x69, 0x31, 0x1b, 0xc9, 0x2c, 0x22, 0xf4, 0xc0, 0xd6, 0x02, 0x67, 0xae, 0xe5,
	0x1f, 0x34, 0x6b, 0xbf, 0x77, 0x0b, 0xc3, 0xf0, 0x04, 0xca, 0x99, 0x36, 0xaf, 0xef, 0xf9, 0xd3,
	0x78, 0x9f, 0x60, 0x0f, 0xd3, 0xec, 0x05, 0x2f, 0xc1, 0xe9, 0x51, 0x18, 0x93, 0x32, 0x11, 0xed,
	0xcf, 0x58, 0x53, 0xbd, 0xa9, 0x2d, 0x63, 0x1d, 0xd6, 0x9f, 0x9b, 0x34, 0x43, 0x1f, 0x2a, 0x13,
	0x15, 0xa6, 0x73, 0x52, 0x26, 0xba, 0x7d, 0xdb, 0x06, 0xb7, 0x2f, 0x9e, 0xce, 0x9f, 0xd3, 0x62,
	0xf6, 0x3a, 0x6d, 0x44, 0x72, 0x11, 0x2c, 0x64, 0x16, 0xbe, 0x07, 0x33, 0x19, 0xaa, 0x38, 0x78,
	0xbb, 0x0d, 0xb6, 0xff, 0x4c, 0x1d, 0xf3, 0xb4, 0x37, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x63,
	0xeb, 0x33, 0x5f, 0xed, 0x01, 0x00, 0x00,
}
